fmod POKER-CARD-NUMBER is
	protecting NAT .
	protecting BOOL .
	sort Number .
	ops A 2 3 4 5 6 7 8 9 10 J Q K : -> Number [ctor] .
	op ToNat : Number -> Nat .
	op _equals_ : Number Number -> Bool .
	op _>_ : Number Number -> Bool .
	op _<_ : Number Number -> Bool .
	
	
	vars X Y : Number .

	ceq ToNat(X) = 2 if X == 2 .
	ceq ToNat(X) = 3 if X == 3 .
	ceq ToNat(X) = 4 if X == 4 .
	ceq ToNat(X) = 5 if X == 5 .
	ceq ToNat(X) = 6 if X == 6 .
	ceq ToNat(X) = 7 if X == 7 .
	ceq ToNat(X) = 8 if X == 8 .
	ceq ToNat(X) = 9 if X == 9 .
	ceq ToNat(X) = 10 if X == 10 .
	ceq ToNat(X) = 11 if X == J .
	ceq ToNat(X) = 12 if X == Q .
	ceq ToNat(X) = 13 if X == K .
	ceq ToNat(X) = 14 if X == A .
	
	ceq _equals_(X, Y) = true if ToNat(X) == ToNat(Y) .
	eq _equals_(X, Y) = false [owise] .
	
	ceq _>_(X, Y) = true if ToNat(X) > ToNat(Y) .
	eq _>_(X, Y) = false [owise] .
	
	ceq _<_(X, Y) = true if ToNat(X) < ToNat(Y) .
	eq _<_(X, Y) = false [owise] .
endfm

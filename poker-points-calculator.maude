fmod POKER-POINTS-CALCULATOR is

	including POKER-RESULTS .
	including POKER-PLAYER .
	including POKER-GAME-PLATE .
	
	vars P L : Player .
	vars X Y : PlayerHand .
	vars Z : Plate .

	*** Check pairs
	ops Pairs DPairs Tris Flush Full Poker : PlayerHand Plate -> Result .
	
	ceq Pairs(X, Z) = Pairs if HasPairs(X) and NoPoints(Z) .
	ceq Pairs(X, Z) = Pairs if HasCard(Z, GetCard(X, 1)) or HasCard(Z, GetCard(X, 2)) .
	ceq Pairs(X, Z) = Pairs if NoPoints(X) and HasPairs(Z) .
	eq Pairs(X, Z) = HCard [owise] .
	
	*** Check Double Pairs
	ceq DPairs(X, Z) = DPairs if HasPairs(X) and HasPairs(Z) .
	ceq DPairs(X, Z) = DPairs if HasCard(Z, GetCard(X, 1)) and HasPairs(Z) and not HasPairsOf(Z, GetCard(X, 1)) .
	ceq DPairs(X, Z) = DPairs if HasCard(Z, GetCard(X, 2)) and HasPairs(Z) and not HasPairsOf(Z, GetCard(X, 2)) .
	ceq DPairs(X, Z) = DPairs if HasCard(Z, GetCard(X, 1)) and HasCard(Z, GetCard(X, 2)) .
	ceq DPairs(X, Z) = DPairs if NoPoints(X) and HasDPairs(Z) .
	eq DPairs(X, Z) = Pairs(X, Z) [owise] .

	*** Check Tris
	ceq Tris(X, Z) = Tris if HasPairsOf(Z, GetCard(X, 1)) .
	ceq Tris(X, Z) = Tris if HasPairsOf(Z, GetCard(X, 2)) .
	ceq Tris(X, Z) = Tris if HasPairs(X) and HasCard(Z, GetCard(X, 1)) .
	ceq Tris(X, Z) = Tris if NoPoints(X) and HasTris(Z) .
	eq Tris(X, Z) = DPairs(X, Z) [owise] .

	*** Check Flush
	ceq Flush(X, Z) = Flush if HasFlushPair(X) and HasFlushTrisOf(Z, GetCard(X, 1)) .
	ceq Flush(X, Z) = Flush if HasFlushPokerOf(Z, GetCard(X, 1)) .
	ceq Flush(X, Z) = Flush if HasFlushPokerOf(Z, GetCard(X, 2)) .
	ceq Flush(X, Z) = Flush if HasFullFlush(Z) .
	eq Flush(X, Z) = Tris(X, Z) [owise] .

	*** Check Full House
	ceq Full(X, Z) = Full if DPairs(X, Z) == DPairs and Tris(X, Z) == Tris .
	ceq Full(X, Z) = Full if HasPairs(X) and HasTris(Z) .
	eq Full(X, Z) = Flush(X, Z) [owise] .

	*** Check Poker
	ceq Poker(X, Z) = Poker if HasTrisOf(Z, GetCard(X, 1)) or HasTrisOf(Z, GetCard(X, 2)) .
	ceq Poker(X, Z) = Poker if HasPairs(X) and HasPairsOf(Z, GetCard(X, 1)) .
	ceq Poker(X, Z) = Poker if HasPoker(Z) .
	eq Poker(X, Z) = Full(X, Z) [owise] .

	*** Evaluator
	op EvaluateHand : PlayerHand Plate -> Result .

	eq EvaluateHand(X, Z) = Poker(X, Z) .

endfm
